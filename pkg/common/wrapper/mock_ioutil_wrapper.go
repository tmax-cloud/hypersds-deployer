// Code generated by MockGen. DO NOT EDIT.
// Source: ioutil_wrapper.go

package wrapper

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIoUtilInterface is a mock of IoUtilInterface interface
type MockIoUtilInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIoUtilInterfaceMockRecorder
}

// MockIoUtilInterfaceMockRecorder is the mock recorder for MockIoUtilInterface
type MockIoUtilInterfaceMockRecorder struct {
	mock *MockIoUtilInterface
}

// NewMockIoUtilInterface creates a new mock instance
func NewMockIoUtilInterface(ctrl *gomock.Controller) *MockIoUtilInterface {
	mock := &MockIoUtilInterface{ctrl: ctrl}
	mock.recorder = &MockIoUtilInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIoUtilInterface) EXPECT() *MockIoUtilInterfaceMockRecorder {
	return _m.recorder
}

// ReadFile mocks base method
func (_m *MockIoUtilInterface) ReadFile(filename string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "ReadFile", filename)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadFile indicates an expected call of ReadFile
func (_mr *MockIoUtilInterfaceMockRecorder) ReadFile(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ReadFile", reflect.TypeOf((*MockIoUtilInterface)(nil).ReadFile), arg0)
}
